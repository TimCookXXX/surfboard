const openItem = item => {
  const container = item.closest('.team__item');
  const contentBlock = container.find('.team__content');
  const textBlock = contentBlock.find('.team__content-block');
  const reqHeight = textBlock.height();

  container.addClass('active');
  contentBlock.height(reqHeight);
}

const closeItem = container => {
  const items = container.find('.team__content');
  const itemContainer = container.find('.team__item');


  itemContainer.removeClass('active');
  items.height(0);

}

$('.team__title').click(e => {
  const $this = $(e.currentTarget);
  const container = $this.closest('.team');
  const elemContainer = $this.closest('.team__item');

  if (elemContainer.hasClass('active')) {
  closeItem(container);
  } else {
  closeItem(container);
  openItem($this);
  }
});;let myMap;

const init = () => {
    myMap = new ymaps.Map('map', {
    center: [55.752004, 37.576133],
    zoom: 16,
    controls: ["zoomControl"]
  });

  const coords = [
    [55.752004, 37.576133]
];

const myCollection = new ymaps.GeoObjectCollection({}, {
  draggable: false,
  iconLayout: 'default#image',
  iconImageHref: './images/img/marker.svg' ,
  iconImageSize: [58, 73],
  iconImageOffset: [-3, -42]
});

coords.forEach(coord => {
  myCollection.add(new ymaps.Placemark(coord));
});

myMap.geoObjects.add(myCollection);

myMap.behaviors.disable('scrollZoom');

};

ymaps.ready(init);;const mesureWidth = item => {
  let reqItemWidth = 0;
  const screenWidth = $(window).width();
  const container = item.closest('.products-menu');
  const titleBlocks = container.find('.products-menu__title');
  const titleWidth = titleBlocks.width() * titleBlocks.length;

  const textContainer = item.find('.products-menu__container');
  const paddingLeft = parseInt(textContainer.css('padding-left'));
  const paddingRight = parseInt(textContainer.css('padding-right'));

  const isMobile = window.matchMedia('(max-width: 768px)').matches;

  if(isMobile) {
    reqItemWidth = screenWidth - titleWidth;
  } else {
    reqItemWidth = 524;
  }

  return {
    container: reqItemWidth,
    textContainer: reqItemWidth - paddingRight - paddingLeft
  }

};

const closeEveryItemInContainer = container => {
  const items = container.find('.products-menu__item');
  const content = container.find('.products-menu__content');
  items.removeClass('active');

  content.width(0);
}

const openItemMenu = item => {
  const hiddenContent = item.find('.products-menu__content');
  const reqWidth = mesureWidth(item);
  const textBlock = item.find('.products-menu__container');


  item.addClass('active');
  hiddenContent.width(reqWidth.container);
  textBlock.width(reqWidth.textContainer);
}

$('.products-menu__title').on('click', e => {

  const $this = $(e.currentTarget);
  const item = $this.closest('.products-menu__item');
  const itemOpened = item.hasClass('active');
  const container = $this.closest('.products-menu');

  if(itemOpened) {
    closeEveryItemInContainer(container);
  } else {
    closeEveryItemInContainer(container);
    openItemMenu(item);
  }
});;const openButton = document.querySelector('.hamburger');
const closeButton = document.querySelector('.fullscreen-menu__close');
const menu = document.querySelector('.fullscreen-menu');


$('.menu__item').click(e => {
  menu.style.display = 'none'
})


openButton.addEventListener('click', function(e) {
  menu.style.display = 'block'
});

closeButton.addEventListener('click', function(e) {
  menu.style.display = 'none'
});;const validateFields = (form, fieldsArray) => {

  fieldsArray.forEach((field) => {
    field.removeClass('input-error');
    if (field.val().trim() == "") {
      field.addClass('input-error')
    }
  });

  const errorFields = form.find('.input-error');

  return errorFields.length == 0;

}

$('.form').submit(e => { 
  e.preventDefault();

  const form = $(e.currentTarget);
  const name = form.find("[name = 'name']");
  const phone = form.find("[name = 'phone']");
  const street = form.find("[name = 'street']");
  const house = form.find("[name = 'house']");
  const comment = form.find("[name = 'comment']");
  const to = form.find("[name = 'to']");

  const modal = $('#modal');
  const content = modal.find('.modal__content');

  modal.removeClass('error-modal');

  const isValid = validateFields(form, [name, phone, street, house, comment, to]);


  if (isValid) {

    const request = $.ajax({
      url: "https://webdev-api.loftschool.com/sendmail",
      method: "post",
      data: {
        name: name.val(),
        phone: phone.val(),
        comment: comment.val(),
        to: to.val()
      },
    });

    request.done(data => {
      content.text(data.message);
    });

    request.fail(data => {
      const message = data.responseJSON.message;
        content.text(message);
        modal.addClass('error-modal');
    });

    request.always(() => {
      $.fancybox.open({
        src: "#modal",
        type: "inline"
      });

    })

  } 
});

$('.app-close-modal').click(e => {
  e.preventDefault();

  $.fancybox.close();
});const sections = $('section');
const display = $('.maincontent');
const sideMenu = $('.fixed-menu');
const menuItems = sideMenu.find('.fixed-menu__item');

const mobileDetect = new MobileDetect(window.navigator.userAgent);
const isMobile = mobileDetect.mobile(); 

let inScroll = false;

sections.first().addClass('active');

const countSectionPosition = (sectionEq) => {
  const position = sectionEq * -100;

  if (isNaN(position)) {
    console.error('Передано не верное значение в countSectionPosition');
    return 0;
  }

  return position;
}

const changeMenuThemeForSection = sectionEq => {

  const currentSection = sections.eq(sectionEq);
  const menuTheme = currentSection.attr('data-sidemenu-theme');
  const activeClass = 'fixed-menu--shadowed';

  if (menuTheme == 'black') {
    sideMenu.addClass(activeClass)
  } else {
    sideMenu.removeClass(activeClass)
  }

}

const resetActiveClassForItem = (items, itemEq, activeClass) => {
  items.eq(itemEq).addClass(activeClass).siblings().removeClass(activeClass);
}

const performTransition = sectionEq => {

  if (inScroll) return;

  const transitionOver = 1000;
  const mouseInertiaOver = 300;

  inScroll = true;
  const position = countSectionPosition(sectionEq);

  changeMenuThemeForSection(sectionEq);

  display.css({
    transform: `translateY(${position}%)`
  });

  resetActiveClassForItem(sections, sectionEq, 'active');

  setTimeout(() => {
    inScroll = false;
    resetActiveClassForItem(menuItems, sectionEq, 'fixed-menu__item--active')
  }, transitionOver + mouseInertiaOver);
};

const viewportScroller = () => {

  const activeSection = sections.filter('.active');
  const nextSection = activeSection.next();
  const prevSection = activeSection.prev();

  return {
    next() {
      if (nextSection.length) {
        performTransition(nextSection.index())
      }
    },
    prev() {
      if (prevSection.length) {
        performTransition(prevSection.index())
      }
    },
  };
};

$(window).on('wheel', e => {
  const deltaY = e.originalEvent.deltaY;
  const scroller = viewportScroller();

  if (deltaY > 0) {
    scroller.next();
  }

  if (deltaY < 0) {
    scroller.prev();
  }
});

$(window).on('keydown', e => {
  const tagName = e.target.tagName.toLowerCase();
  const userTypingInInputs = tagName == 'input' || tagName == 'textarea';
  const scroller = viewportScroller();

  if (userTypingInInputs) return;

  switch (e.keyCode) {
    case 87:
      scroller.prev();
      break;

    case 83:
      scroller.next();
      break;
  }

});

$('.wrapper').on('touchmove', e => e.preventDefault());

$('[data-scroll-to]').click(e => {
  e.preventDefault();

  const $this = $(e.currentTarget);
  const target = $this.attr('data-scroll-to');
  const reqSection = $(`[data-section-id=${target}]`);

  performTransition(reqSection.index());
});

if (isMobile) {
  $("body").swipe({
    swipe: function (event, direction) {
      const scroller = viewportScroller();
      let scrollDirection = '';
  
      if (direction == 'up') scrollDirection = 'next';
      if (direction == 'down') scrollDirection = 'prev';
  
      scroller[scrollDirection]();
    },
  });
}
;const playBtn = document.querySelector('.video__player-img');
const video = document.getElementById('player');
const playerPlayBtn = document.querySelector('.duration__img');
const durationControl = document.getElementById('durationLevel');
const soundControl = document.getElementById('dynamicLevel');
const soundBtn = document.querySelector('.sound');
const dynamicBtn = document.getElementById('dynamic');
let intervalId;
let soundLevel;

video.addEventListener('loadeddata', function () {
  video.addEventListener('click', playStop);

  const playButtons = document.querySelectorAll('.play');

  for (let i = 0; i < playButtons.length; i++) {
    playButtons[i].addEventListener('click', playStop);
  }

  durationControl.min = 0;
  durationControl.value = 0;
  durationControl.max = video.duration;
  durationControl.addEventListener('input', setVideoDuration);

  soundControl.min = 0;
  soundControl.max = 10;
  soundControl.value = soundControl.max;
  soundControl.addEventListener('input', changeSoundVolume);

  dynamicBtn.addEventListener('click', soundOf);

  video.addEventListener('ended', () => {
    playBtn.classList.toggle('video__player-img--active');
    playerPlayBtn.classList.remove('active');
    video.currentTime = 0;

  })
});

function playStop() {
  playBtn.classList.toggle('video__player-img--active');
  playerPlayBtn.classList.toggle('active');
  if (video.paused) {
    video.play()
    intervalId = setInterval(updateDuration, 1000 / 60);
  } else {
    video.pause()
    clearInterval(intervalId)
  }
}

function setVideoDuration() {
  video.currentTime = durationControl.value;
  updateDuration();
}

function updateDuration() {
  durationControl.value = video.currentTime;
  let step = video.duration / 100;
  let percent = video.currentTime / step;
  durationControl.style.background = `linear-gradient(90deg, #FEDB3F 0%, #FEDB3F ${percent}%, #626262 ${percent}%)`;
}

function changeSoundVolume() {
  video.volume = soundControl.value / 10;
  if (video.volume === 0) {
    soundBtn.classList.add('active');
  } else {
    soundBtn.classList.remove('active');
  }
}

function soundOf() {
  if (video.volume === 0) {
    video.volume = soundLevel;
    soundControl.value = soundLevel * 10;
    soundBtn.classList.remove('active');
  } else {
    soundLevel = video.volume;
    video.volume = 0;
    soundControl.value = 0;
    soundBtn.classList.add('active');
  }
};const slider = $('.products').bxSlider({
  pager: false,
  controls: false
});

$('.product-slider__arrow--direction--prev').click(e => {
  slider.goToPrevSlide();
});

$('.product-slider__arrow--direction--next').click(e => {
  slider.goToNextSlide();
});;const findBlockByAlias = alias => {
  return $('.reviews__item').filter((ndx, item) => {
    return $(item).attr('data-linked-with') == alias
  });
};

$('.interactive-avatar__link').click(e => {
  e.preventDefault();

  const $this = $(e.currentTarget);
  const target = $this.attr('data-open');
  const itemToShow = findBlockByAlias(target);
  const curItem = $this.closest('.reviews__switcher-item');

  itemToShow.addClass('active').siblings().removeClass('active');
  curItem.addClass('active').siblings().removeClass('active');
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
